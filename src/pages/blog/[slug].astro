---
import PostLayout from '@layouts/PostLayout.astro';
import { sortPostsByDateDesc } from '@utils/data-util';
import type { GetStaticPaths } from 'astro';
import type { CollectionEntry } from 'astro:content';
import { getCollection, render } from 'astro:content';

export const getStaticPaths = (async () => {
  const posts = (await getCollection('blog')).sort(sortPostsByDateDesc);
  return posts.map((post: any) => ({
    params: { slug: post.id },
    props: post,
  }));
}) satisfies GetStaticPaths;

type Props = CollectionEntry<'blog'>;

const post = Astro.props;

const { title, description, tags, category, cover, publishedDate, link } =
  post.data;

const { Content, headings, remarkPluginFrontmatter } = await render(post);

const isHeadings = headings && headings.length > 0;
---

<PostLayout
  title={title}
  description={description}
  tags={tags}
  category={category}
  cover={cover}
  isHeadings={isHeadings}
  publishedDate={publishedDate}
  minutesToRead={remarkPluginFrontmatter.minutesRead.split(' ')[0]}
  headings={headings}
  ogImage={`/blog/${post.id}/og.png`}
  link={link}
  currentUrl={`/blog/${post.id}`}
  author=""
>
  <Content />
</PostLayout>

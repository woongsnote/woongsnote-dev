---
import type { GetStaticPaths } from 'astro';
import { getCollection } from 'astro:content';
import config from '@config/site-config';
import Base from '@layouts/Base.astro';
import Posts from '@layouts/Posts.astro';
import Pagination from '@components/Page/Pagination.astro';
import { sortPostsByDateDesc } from '@utils/data-util';
import PageHeader from '@components/Page/PageHeader.astro';

export const prerender = true;

export const getStaticPaths = (async ({ paginate }) => {
  const allPosts = (await getCollection('blog')).sort(sortPostsByDateDesc);
  return paginate(allPosts, { pageSize: config.site.pageSize });
}) satisfies GetStaticPaths;

const { page } = Astro.props;

const posts = await getCollection('blog');
for (const post of posts) {
  const { remarkPluginFrontmatter } = await post.render();
  post.data.readingTime = remarkPluginFrontmatter.minutesRead.split(' ')[0];
}
---

<Base pageTitle="Blog">
  <PageHeader title="Blog" description="개발 관련 학습한 지식의 기록입니다." />
  <Posts posts={page.data} pageSize={config.site.pageSize * 2} />
  <Pagination
    pageLength={page.lastPage}
    currentUrl={page.url.current}
    currentPage={page.currentPage}
    firstUrl={`/blog/`}
    prevUrl={page.url.prev}
    nextUrl={page.url.next}
    lastUrl={`/posts/${page.lastPage}`}
  />
</Base>

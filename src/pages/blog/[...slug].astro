---
import type { GetStaticPaths } from 'astro';
import ArticleHeader from '@components/Article/ArticleHeader.astro';
import ArticleToc from '@components/Article/ArticleToc.astro';
import PostComments from '@components/Comments/PostComments.astro';
import PostThumbnail from '@components/Thumbnail/PostThumbnail.astro';
import Layout from '@layouts/BaseLayout.astro';
import type { CollectionEntry } from 'astro:content';
import { getCollection } from 'astro:content';

export const prerender = true;

export const getStaticPaths = (async () => {
  const posts = await getCollection('blog');
  return posts.map((post) => ({
    params: { slug: post.slug },
    props: post,
  }));
}) satisfies GetStaticPaths;

type Props = CollectionEntry<'blog'>;

const post = Astro.props;

const { Content, headings, remarkPluginFrontmatter } = await post.render();

const { title, description, publishedDate, tags, cover, category } = post.data;

const isHeadings = headings && headings.length > 0;
---

<Layout title={title} description={description}>
  <ArticleHeader
    minutesToRead={remarkPluginFrontmatter.minutesRead.split(' ')[0]}
    title={title}
    description={description}
    publishedDate={publishedDate}
    tags={tags}
    cover={cover}
    category={category}
  />
  {isHeadings && <ArticleToc headings={headings} />}
  <article class="prose mx-auto w-full max-w-3xl dark:prose-invert">
    <hr class="my-10" />
    {
      category === 'Project' && cover && (
        <PostThumbnail image={cover} alt={title} />
      )
    }
    <Content />
  </article>
  <PostComments />
</Layout>

---
import type { GetStaticPaths } from 'astro';
import Base from '@layouts/Base.astro';
import PostCard from '@components/PostCard.astro';
import {
  getPostsByTag,
  getUniqueTags,
  sortPostsByDateDesc,
} from '@utils/data-util';
import { getCollection } from 'astro:content';

export const prerender = true;

export const getStaticPaths = (async () => {
  const allPosts = (await getCollection('blog')).sort(sortPostsByDateDesc);
  const uniqueTags = getUniqueTags(allPosts);

  return uniqueTags.map((tag) => {
    const filteredPosts = getPostsByTag(allPosts, tag);
    return {
      params: { tag },
      props: { posts: filteredPosts },
    };
  });
}) satisfies GetStaticPaths;

const { tag } = Astro.params;
const { posts } = Astro.props;
const tagsLength = posts.length;
const title = `Tag: ${tag}`;
---

<Base pageTitle={title}>
  <h2 class="mb-2 align-baseline text-2xl text-content md:text-4xl">
    <span class="rounded-lg p-1 font-black text-accent">{tag}</span> 태그가 포함된
    게시글은 총 <span class="font-bold text-accent">{tagsLength}</span>건
    입니다.
  </h2>
  <section
    class="my-2 grid w-full gap-8 text-content md:grid-cols-2 lg:grid-cols-3"
  >
    {posts.map((post) => <PostCard post={post} />)}
  </section>
</Base>

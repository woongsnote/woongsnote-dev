---
import type { GetStaticPaths } from 'astro';
import { getCollection } from 'astro:content';
import Base from '@layouts/Base.astro';
import TagIcon from '@icons/TagIcon.astro';
import { getTags } from '@utils/getTags';

export const prerender = true;

export const getStaticPaths = (async () => {
  const allPosts = await getCollection('blog');
  const uniqueTags = getTags(allPosts);

  return uniqueTags.map((tag) => {
    const filteredPosts = allPosts
      .filter((post) => post.data.tags.includes(tag))
      .sort(
        (a, b) =>
          b.data.publishedDate.valueOf() - a.data.publishedDate.valueOf()
      );
    return {
      params: { tag },
      props: { posts: filteredPosts },
    };
  });
}) satisfies GetStaticPaths;

const { tag } = Astro.params;
const { posts } = Astro.props;
const tagsLength = posts.length;
const title = `Tag: ${tag}`;
---

<Base pageTitle={title}>
  <h2 class="mt-2 align-baseline text-2xl text-content md:text-4xl">
    <span class="rounded-lg p-1 font-black text-accent">{tag}</span> 태그가 포함된
    게시글은 총 <span class="font-bold text-accent">{tagsLength}</span>건
    입니다.
  </h2>
  <section
    class="mt-4 grid w-full gap-4 text-content md:grid-cols-2 lg:grid-cols-3"
  >
    {
      posts.map((post) => (
        <a
          href={`/blog/${post.slug.slice(7)}`}
          class="flex items-center space-x-1 text-lg hover:text-accent gap-x-2"
        >
          <TagIcon />
          {post.data.title}
        </a>
      ))
    }
  </section>
</Base>

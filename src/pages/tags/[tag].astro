---
import type { GetStaticPaths } from 'astro';
import { getCollection } from 'astro:content';
import Base from '@layouts/Base.astro';
import TagIcon from '@icons/TagIcon.astro';
import { getTags } from '@utils/getTags';

export const getStaticPaths = (async () => {
  const allPosts = await getCollection('blog');
  const uniqueTags = getTags(allPosts);

  return uniqueTags.map((tag) => {
    const filteredPosts = allPosts.filter((post) =>
      post.data.tags.includes(tag)
    );
    return {
      params: { tag },
      props: { posts: filteredPosts },
    };
  });
}) satisfies GetStaticPaths;

const { tag } = Astro.params;
const { posts } = Astro.props;
const tagsLength = posts.length;
const title = `Tag: ${tag}`;
---

<Base pageTitle={title}>
  <h2 class="mt-2 align-baseline text-lg text-content lg:text-4xl">
    <span class="rounded-lg p-1 font-black text-accent">{tag}</span> 태그가
    포함된 게시글은 총 <span class="font-bold text-accent">{tagsLength}</span>건
    입니다.
  </h2>
  <ul class="mt-4 w-fit space-y-4 pl-8 text-content">
    {
      posts.map((post) => (
        <li class="flex items-center space-x-1 text-lg hover:text-accent">
          <TagIcon />
          <a href={`/blog/${post.slug}`}>{post.data.title}</a>
        </li>
      ))
    }
  </ul>
</Base>
